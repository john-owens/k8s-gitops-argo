loki:
  replicas: 3
  config:
    distributor:
      ring:
        kvstore:
          store: memberlist
    ingester:
      lifecycler:
        ring:
          kvstore:
            store: memberlist
          replication_factor: 1
        final_sleep: 0s
      chunk_idle_period: 5m
      chunk_retain_period: 30s
    memberlist:
      abort_if_cluster_join_fails: false
      bind_port: 7946
      join_members:
        - loki-headless.logs.svc.cluster.local:7946
      max_join_backoff: 1m
      max_join_retries: 10
      min_join_backoff: 1s
    schema_config:
      configs:
        - from: "2020-10-24"
          store: boltdb-shipper
          object_store: s3
          schema: v11
          index:
            prefix: index_
            period: 24h
    storage_config:
      boltdb_shipper:
        active_index_directory: /data/loki/index
        cache_location: /data/loki/index_cache
        shared_store: s3
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
    compactor:
      working_directory: /data/compactor
      shared_store: s3
      compaction_interval: 5m
    ruler:
      storage:
        type: local
        local:
          directory: /rules
      rule_path: /tmp/scratch
      alertmanager_url: http://kube-prometheus-stack-alertmanager:9093
      ring:
        kvstore:
          store: inmemory
      enable_api: true

  serviceMonitor:
    enabled: true
  tolerations:
    - key: "arm"
      operator: "Exists"
    - key: "arm64"
      operator: "Exists"
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - loki
          topologyKey: "kubernetes.io/hostname"

  alerting_groups:
    #
    # zwavejs2mqtt
    #
    - name: zwavejs2mqtt
      rules:
        - alert: ZwaveUnableToReachMQTT
          expr: |
            sum(count_over_time({app="zwavejs2mqtt"} |~ "(?i)error while connecting mqtt"[2m])) > 0
          for: 10s
          labels:
            severity: critical
            category: logs
          annotations:
            summary: "Zwavejs2mqtt is unable to reach MQTT"
    #
    # frigate
    #
    - name: frigate
      rules:
        - alert: FrigateUnableToReachMQTT
          expr: |
            sum(count_over_time({app="frigate"} |~ "(?i)unable to connect to mqtt server"[2m])) > 0
          for: 10s
          labels:
            severity: critical
            category: logs
          annotations:
            summary: "Frigate is unable to reach MQTT"
    #
    # home-assistant
    #
    - name: home-assistant
      rules:
        - alert: HomeAssistantUnableToReachPostgresql
          expr: |
            sum by (app) (count_over_time({app="home-assistant"} |~ "(?i)error in database connectivity"[2m])) > 0
          for: 10s
          labels:
            severity: critical
            category: logs
          annotations:
            summary: "Home Assistant is unable to connect to postgresql"
    #
    # node-red
    #
    - name: node-red
      rules:
        - alert: NodeRedUnableToReachHomeAssistant
          expr: |
            sum by (app) (count_over_time({app="node-red"} |~ "(?i)home assistant.*connecting to undefined"[2m])) > 0
          for: 10s
          labels:
            severity: critical
            category: logs
          annotations:
            summary: "Node-Red is unable to connect to Home Assistant"


  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: vault-issuer
      cert-manager.io/common-name: loki.rsr.net
    hosts:
      - host: loki.rsr.net
        paths:
          - /
    tls:
      - hosts:
          - loki.rsr.net
        secretName: loki-cert-tls
